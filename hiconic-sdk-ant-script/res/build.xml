<!--
Copyright BRAINTRIBE TECHNOLOGY GMBH, Austria, 2002-2022

This library is free software; you can redistribute it and/or modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either version 3 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License along with this library; See http://www.gnu.org/licenses/.
-->
<project xmlns:bt="antlib:com.braintribe.build.ant.tasks" basedir="." default="install">

	<bt:import artifact="com.braintribe.devrock.ant:common-ant-script#1.0" useCase="DEVROCK"/>

	<target name="clean" description="clean up" >
		<delete dir="${dist}"/>
	</target>

	<target name="dist" description="generate the distribution" depends="init,clean">
		<property name="dr-zip" location="${dist}/dr-zip"/>
		<property name="build" location="build"/>

		<property name="dr-dir" location="${dr-zip}/${pom.project.artifactId}"/>
		<mkdir dir="${dr-dir}"/>

		<property name="env-dir" location="${dr-dir}/env"/>
		<mkdir dir="${env-dir}"/>

		<property name="tools-dir" location="${dr-dir}/tools"/>
		<mkdir dir="${tools-dir}"/>

		<property name="hc-build-dir" location="${tools-dir}/hc-build"/>
		<mkdir dir="${hc-build-dir}"/>

		<property name="jinni-dir" location="${tools-dir}/jinni"/>
		<mkdir dir="${jinni-dir}"/>

		<property name="shared-lib-dir" location="${tools-dir}/shared-lib"/>
		<mkdir dir="${shared-lib-dir}"/>
		
		<bt:dependencies>
			<dependency 
				groupId="com.braintribe.devrock.cicd" 
				artifactId="hc-build-app" 
				version="${pom.project.properties.V.com.braintribe.devrock.cicd}" 
				exclusions="*:*" 
			/>
			<FileSetTarget id="hc-build-fileset" type="application:zip"/>
		</bt:dependencies>

		<bt:dependencies>
			<dependency 
				groupId="tribefire.extension.setup" 
				artifactId="jinni" 
				version="${pom.project.properties.V.tribefire.extension.setup}" 
				exclusions="*:*" 
			/>
			<FileSetTarget id="jinni-fileset" type="application:zip"/>
		</bt:dependencies>

		<bt:dependencies>
			<dependency 
				groupId="tribefire.extension.setup" 
				artifactId="hiconic-sdk-updator" 
				version="${pom.project.properties.V.tribefire.extension.setup}" 
				exclusions="*:*" 
			/>
			<FileSetTarget id="updator-fileset" type="jar"/>
		</bt:dependencies>

		<patternset id="libs-excluded">
			<exclude name="lib/**"/>
		</patternset>
		<patternset id="libs-only">
			<include name="lib/**"/>
		</patternset>

		<!-- Unzip apps without libraries -->
		<unzip dest="${hc-build-dir}">
			<resources refid="hc-build-fileset"/>
			<patternset refid="libs-excluded"/>
		</unzip>

		<unzip dest="${jinni-dir}">
			<resources refid="jinni-fileset"/>
			<patternset refid="libs-excluded"/>
		</unzip>

		<!-- Unzip libraries of all apps into shared-lib -->
		<unzip dest="${shared-lib-dir}">
			<resources refid="hc-build-fileset"/>
			<patternset refid="libs-only"/>
			<mapper><globmapper from="lib/*" to="*"/></mapper>
		</unzip>


		<unzip dest="${shared-lib-dir}">
			<resources refid="jinni-fileset"/>
			<patternset refid="libs-only"/>
			<mapper><globmapper from="lib/*" to="*"/></mapper>
		</unzip>

		<copy todir="${dr-dir}">
			<fileset dir="res/${pom.project.artifactId}"/>
		</copy>

		<copy todir="${jinni-dir}/bin">
            <resources refid="updator-fileset"/>
            <mapper type="glob" from="*" to="hiconic-sdk-updator.jar"/>
        </copy>
	</target>

	<target name="assemble" depends="dist">
		<zip destfile="${dist}/${versionedName}.zip">
			<zipfileset dir="${dr-zip}" filemode="754">
				<and>
					<not>
						<!-- for performance -->
						<filename name="**/*.jar"/>
					</not>
					<containsregexp expression="^#!\s*\/bin\/(ba)?sh"/>
				</and>
			</zipfileset>
			<zipfileset dir="${dr-zip}">
				<not>
					<and>
						<not>
							<!-- for performance -->
							<filename name="**/*.jar"/>
						</not>
						<containsregexp expression="^#!\s*\/bin\/(ba)?sh"/>
					</and>
				</not>
			</zipfileset>
		</zip>
	</target>

	<target name="install" depends="assemble" description="install to local maven repository">
		<bt:install>
			<pom refid="pom.project"/>
			<attach file="dist/${versionedName}.zip" type=":zip"/>
		</bt:install>
	</target>

</project>
